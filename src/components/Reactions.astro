---
interface ReactionGroup {
  __typename: string;
  emoji?: string;
  customEmoji?: {
    name: string;
    iri: string;
  };
  reactors: {
    totalCount: number;
  };
}

interface Props {
  reactionGroups: ReactionGroup[];
}

const { reactionGroups } = Astro.props;
---

{
  reactionGroups && reactionGroups.length > 0 && (
    <div class="border-t pt-6 mt-8">
      <h3 class="text-sm font-medium text-gray-700 mb-3">Reactions</h3>
      <div class="flex flex-wrap gap-4 items-center">
        {reactionGroups.map((group) => {
          if (group.__typename === "EmojiReactionGroup" && group.emoji) {
            return (
              <div class="flex items-center gap-1.5">
                <span class="text-2xl" title="Reaction">
                  {group.emoji}
                </span>
                <span class="text-base font-medium text-gray-700">
                  {group.reactors.totalCount}
                </span>
              </div>
            );
          } else if (
            group.__typename === "CustomEmojiReactionGroup" &&
            group.customEmoji
          ) {
            return (
              <div class="flex items-center gap-1.5">
                <img
                  src={group.customEmoji.iri}
                  alt={group.customEmoji.name}
                  class="w-6 h-6"
                  title={group.customEmoji.name}
                />
                <span class="text-base font-medium text-gray-700">
                  {group.reactors.totalCount}
                </span>
              </div>
            );
          }
        })}
      </div>
    </div>
  )
}
